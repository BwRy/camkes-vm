#!/bin/sh

#
# Copyright 2014, NICTA
#
# This software may be distributed and modified according to the terms of
# the GNU General Public License version 2. Note that NO WARRANTY is provided.
# See "LICENSE_GPLv2.txt" for details.
#
# @TAG(NICTA_GPL)
#

# Simple shell program to insert files into the rootfs.cpio,
# this includes C binary files, shell scripts and kernel modules

pack() {
	cd mod_rootfs
	find . -print0 | cpio --null -H newc -o > ../rootfs.new
	cd ..
	gzip rootfs.new
	mv rootfs.new.gz rootfs.cpio
}

unpack() {
	if [ -d "mod_rootfs" ]; then
		rm -rf mod_rootfs
	else
		mkdir mod_rootfs
	fi
	zcat rootfs.cpio > rootfs
	cd mod_rootfs
	cpio -idvm < ../rootfs
	rm ../rootfs
}

flush() {
	rm -rf mod_rootfs
	cp backup.cpio rootfs.cpio
	./editfs -u
}

insert() {
	rsync -av ./build/out/ mod_rootfs
}

usage() {
	echo "Usage: (fakeroot|root) editfs (-f|-u|-p|-i|-s)"
}

status() {
	echo "It's fine"
}


# Entry point
cd "$(dirname "$0")"

if [ "$1" = "--help" ]; then
	echo "-f, remove working copy of rootfs and restore backup"
	echo "-p, pack mod_rootfs directory into rootfs.cpio"
	echo "-u, unpack rootfs.cpio into a directory (mod_rootfs)"
	echo "-i, insert files from build/out into the mod_rootfs directory"
	echo "-s, get status of fs system"
	exit 0
fi

if [ $(id -u) != "0" ]; then
	echo "Not running as root"; usage 1>&2; exit 1
fi

if [ "$#" != "1" ]; then
	echo "Invalid arg count"; usage 1>&2; exit 1
fi

if [ ! -f "backup.cpio" ]; then
	cp rootfs.cpio backup.cpio
fi

if [ ! -d "mod_rootfs" ];  then
	unpack
fi

# if [ ! -d "linux-3.15" ]; then
# 	if [ -f "linux-3.15.zip" ]; then
# 		# unzip "linux-3.15.zip"
# 	else
# 		echo "No buildroot linux 3.15 kernel"
# 	fi
# fi

case "$1" in

-f) flush
	;;
-p) pack
	;;
-u)	unpack
	;;
-i) insert
	;;
-s) status
	;;
*) echo "Invalid option"; usage; exit 1
	;;

esac



