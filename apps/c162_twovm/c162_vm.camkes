/*
 * Copyright 2014, NICTA
 *
 * This software may be distributed and modified according to the terms of
 * the GNU General Public License version 2. Note that NO WARRANTY is provided.
 * See "LICENSE_GPLv2.txt" for details.
 *
 * @TAG(NICTA_GPL)
 */
#include <autoconf.h>
#include <configurations/vm.h>

component Init0 {
    include "vmm/vchan_sharemem.h";
    uses VchanInterface vchan_con;
    consumes VchanEvent vevent;
    dataport vchan_headers_t share_mem;
    VM_INIT_DEF()
}

component Init1 {
    include "vmm/vchan_sharemem.h";
    uses VchanInterface vchan_con;
    consumes VchanEvent vevent;
    dataport vchan_headers_t share_mem;
    VM_INIT_DEF()
}

component VM {
    /* We want to export the time interface up to our main spec */
    provides Timer time_server_timer;
    emits Notifcation time_server_complete;
    composition {
        VM_COMPOSITION_DEF()
        VM_PER_VM_COMP_DEF(0)
        VM_PER_VM_COMP_DEF(1)
        component Vchan vchan_0;
        component HelloWorld hello;
        /* Connect hello to the vchan component */
        connection seL4Asynch vchan_event(from vchan_0.vevent_sv, to hello.vevent);
        connection seL4RPCCall hvchan(from hello.vchan_con, to vchan_0.vchan_com);
        connection seL4SharedData hvchan_sharemem_0(from hello.share_mem, to vchan_0.share_mem);
        /* Connect hello and vchan to the serial server (pretend to be vm1) */
        connection seL4RPCCall hserial(from hello.putchar, to serial.vm_putchar);
        connection seL4RPCCall vchanserial(from vchan_0.putchar, to serial.vm_putchar);
        /* Connect vm1 to the vchan component */
        connection seL4RPCCall vchan_1(from vm1.vchan_con, to vchan_0.vchan_com);
        connection seL4SharedData vchan_sharemem_1(from vm1.share_mem, to vchan_0.share_mem);
        connection seL4Asynch vchan_event_init_1(from vchan_0.vevent_cl, to vm1.vevent);
        /* Also connect vm0 to the vchan component to get around compilation problems */
        connection seL4RPCCall vchan(from vm0.vchan_con, to vchan_0.vchan_com);
        connection seL4SharedData vchan_sharemem(from vm0.share_mem, to vchan_0.share_mem);
        connection seL4Asynch vchan_event_init(from vchan_0.vevent_cl, to vm0.vevent);
        /* Export the time server interface up */
        connection ExportRPC export_timer(from time_server_timer, to time_server.the_timer);
        connection ExportAsynch export_timer_notify(from time_server.timer_notification, to time_server_complete);
    }
    configuration {
        VM_CONFIGURATION_DEF()
        VM_PER_VM_CONFIG_DEF(0)
        VM_PER_VM_CONFIG_DEF(1)
        vm0.simple_untyped24_pool = 2;
        vm1.simple_untyped24_pool = 2;
        vm0.guest_ram_mb = 80;
        vm1.guest_ram_mb = 80;
        ethdriver0.putchar_attributes = "0";
        hello.putchar_attributes = "1";
        vchan_0.putchar_attributes = "1";
        vm0.kernel_cmdline = VM_GUEST_CMDLINE;
        vm0.kernel_image = C162_KERNEL_IMAGE;
        vm0.kernel_relocs = C162_KERNEL_IMAGE;
        vm0.initrd_image = C162_ROOTFS;
        vm0.iospace_domain = 0x0f;
        vm1.kernel_cmdline = VM_GUEST_CMDLINE;
        vm1.kernel_image = C162_KERNEL_IMAGE;
        vm1.kernel_relocs = C162_KERNEL_IMAGE;
        vm1.initrd_image = C162_ROOTFS;
        vm1.iospace_domain = 0x10;
        vm0_config.ram = [ [ 0x21000000,24 ] , [ 0x22000000 , 25 ] , [ 0x24000000 , 24 ] ];
        vm1_config.ram = [ [ 0x27000000,24 ] , [ 0x28000000 , 25 ] , [ 0x2A000000 , 24 ] ];
        vm0_config.ioports = [ {"start":0xd040, "end":0xd05f, "pci_device":1, "name":"Ethernet"}
        ];
        vm1_config.ioports = [
            {"start":0x2f8, "end":0x2ff, "pci_device":0, "name":"COM2 Serial Port"},
            {"start":0x2e8, "end":0x2ef, "pci_device":0, "name":"COM4 Serial Port"},
            {"start":0x162e, "end":0x162f, "pci_device":0, "name":"PLD Registers"},
            {"start":0x378, "end":0x37f, "pci_device":0, "name":"PLD Discrete I/O"},
            {"start":0x3f0, "end":0x3f7, "pci_device":0, "name":"PLD Extended Discrete I/O"},
            {"start":0x160E, "end":0x160F, "pci_device":0, "name":"CANbus 1 Two address"},
            {"start":0x1680, "end":0x16A0, "pci_device":0, "name":"CANbus 1 Multi address"},
            {"start":0x161E, "end":0x161F, "pci_device":0, "name":"CANbus 2 Two address"},
            {"start":0x16C0, "end":0x16E0, "pci_device":0, "name":"CANbus 2 Multi address"},
            {"start":0xe000, "end":0xe01f, "pci_device":1, "name":"Some device"}
        ];
        vm0_config.irqs = [
            {"name":"Ethernet", "source":17, "level_trig":1, "active_low":1, "dest":11},
            {"name":"USB", "source":23, "level_trig":1, "active_low":1, "dest":14}
        ];
        vm1_config.irqs = [
            {"name":"I2C", "source":18, "level_trig":1, "active_low":1, "dest":12},
            {"name":"Serial", "source":3, "level_trig":0, "active_low":0, "dest":3}
        ];
        vm0_config.pci_devices_iospace = 1;
        vm1_config.pci_devices_iospace = 1;
        vm0_config.pci_devices = [
            {"name":"Ethernet",
                "bus":1, "dev":0, "fun":1,
                "irq":"Ethernet",
                "memory":[
                    {"paddr":0xf1a80000, "size":0x80000, "page_bits":12},
                    {"paddr":0xf1c08000, "size":0x4000, "page_bits":12},
                ],
            },
            {"name":"USB",
                "bus":0, "dev":0x1d, "fun":0,
                "irq":"USB",
                "memory":[
                    {"paddr":0xf2c07000, "size":0x400, "page_bits":12},
                ],
            },
        ];
        vm1_config.pci_devices = [
            {"name":"I2C",
                "bus":0, "dev":0x1f, "fun":3,
                "irq":"I2C",
                "memory":[
                    {"paddr":0xf2c05000, "size":0x100, "page_bits":12},
                ],
            },
        ];
    }
}
